<?php
/**
 * @file
 * contains \Drupal\rsvplist\Form\RSVPSettingsForm
 */

namespace Drupal\rsvplist\Form;

use Drupal\Core\Form\ConfigFormBase;

use Drupal\Core\Form\FormStateInterface;

/**
 * Class RSVPSettingsForm
 * @package Drupal\rsvplist\Form
 *
 * Defines a form to configure RSVP List module settings
 */
class RSVPSettingsForm extends ConfigFormBase
{
    /**
     * Gets the configuration names that will be editable.
     *
     * @return array
     *   An array of configuration object names that are editable if called in
     *   conjunction with the trait's config() method.
     */
    protected function getEditableConfigNames()
    {
        return [
            'rsvplist.settings'
        ];
    }

    /**
     * Returns a unique string identifying the form.
     *
     * @return string
     *   The unique string identifying the form.
     */
    public function getFormId()
    {
        return 'rsvplist_admin_settings';
    }

    public function buildForm(array $form, FormStateInterface $form_state)
    {
        $types = node_type_get_names();

        $config = $this->config('rsvplist.settings');

        $form['rsvplist_types'] = [
            '#type' => 'checkboxes',
            '#title' => $this->t('The content types to enable RSVP collection for'),
            '#default_value' => $config->get('allowed_types'),
            '#options' => $types,
            '#description' => t('On the specified node types, an RSVP option will be available and can be enabled while editing'),
        ];

        $form['array_filter'] = [
            '#type' => 'value',
            '#value' => true
        ];

        return parent::buildForm($form, $form_state);
    }

    public function submitForm(array &$form, FormStateInterface $form_state)
    {
        $allowed_types = array_filter($form_state->getValue('rsvplist_types'));

        sort($allowed_types);

        $this->config('rsvplist.settings')
            ->set('allowed_types', $allowed_types)
            ->save();

        parent::submitForm($form, $form_state); // TODO: Change the autogenerated stub
    }
}